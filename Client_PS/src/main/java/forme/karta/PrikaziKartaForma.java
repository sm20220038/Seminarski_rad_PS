/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme.karta;
import domain.Karta;
import domain.Putnik;
import domain.Linija;
import domain.Operater;
import domain.StavkaKarte;
import java.sql.Date;
import java.time.LocalDate;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.text.DateFormatter;
import kontroleri.KontrolerKarta;
import kontroleri.KontrolerPutnik;
import listener.KartaListener;
import modeli.ModelTabelePrikazKarta;
import modeli.ModelTabelePrikazStavkiKarte;
/**
 *
 * @author stefa
 */
public class PrikaziKartaForma extends javax.swing.JFrame implements KartaListener{
    private KontrolerKarta kontrolerKarta;
    private KontrolerPutnik kontrolerPutnik;
    private List<Operater> operateri;
    private List<Putnik> putnici;
    private List<Linija> linije;
    private List<StavkaKarte> listaStavki;
    private List<Karta> listaKarti;
    private ModelTabelePrikazKarta modelKarta;
    private ModelTabelePrikazStavkiKarte modelStavke;
    /**
     * Creates new form PrikaziKartaForma
     */
    public PrikaziKartaForma() {
        kontrolerKarta = KontrolerKarta.getInstance();
        kontrolerPutnik = KontrolerPutnik.getInstance();
        initComponents();
        napuniComboBoxeve();
        this.setLocationRelativeTo(null);
        initTable();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbOperater = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cmbPutnik = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmbLinija = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtDatum = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCenaUkupno = new javax.swing.JTextField();
        btnPretrazi = new javax.swing.JButton();
        btnResetujFiltere = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKarte = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStavkeKarte = new javax.swing.JTable();
        btnPromeni = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtValuta = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Prikazi Karte");

        jLabel1.setText("Operater:");

        cmbOperater.setModel(new javax.swing.DefaultComboBoxModel<>());

        jLabel2.setText("Putnik:");

        cmbPutnik.setModel(new javax.swing.DefaultComboBoxModel<>());

        jLabel3.setText("Linija:");

        cmbLinija.setModel(new javax.swing.DefaultComboBoxModel<>());

        jLabel4.setText("Datum karte:");

        jLabel5.setText("Cena ukupno:");

        btnPretrazi.setText("Pretrazi");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        btnResetujFiltere.setText("Resetuj filtere");
        btnResetujFiltere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetujFiltereActionPerformed(evt);
            }
        });

        jLabel6.setText("Karte:");

        tblKarte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblKarte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKarteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKarte);

        jLabel7.setText("Stavke karte:");

        tblStavkeKarte.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblStavkeKarte);

        btnPromeni.setText("Promeni");
        btnPromeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromeniActionPerformed(evt);
            }
        });

        jLabel8.setText("Valuta:");

        txtValuta.setText("RSD");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnPromeni))
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbOperater, 0, 134, Short.MAX_VALUE)
                                    .addComponent(txtDatum))
                                .addGap(52, 52, 52)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbPutnik, 0, 135, Short.MAX_VALUE)
                                    .addComponent(txtCenaUkupno))
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbLinija, 0, 135, Short.MAX_VALUE)
                                    .addComponent(txtValuta))))
                        .addGap(52, 52, 52)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(btnResetujFiltere, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(212, 212, 212))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbOperater, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cmbPutnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbLinija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtCenaUkupno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPretrazi)
                    .addComponent(btnResetujFiltere)
                    .addComponent(jLabel8)
                    .addComponent(txtValuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(btnPromeni))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        Date datumKarte = null;
        if(!txtDatum.getText().isBlank()){
            String datum = txtDatum.getText().trim();
            try {
                LocalDate localDate = LocalDate.parse(datum);
                datumKarte = Date.valueOf(localDate);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Neispravan format. Ocekivani format: YYYY-MM-DD", "Greska!", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
        }
        
        Operater operater = (Operater) cmbOperater.getSelectedItem();
        Putnik putnik = (Putnik) cmbPutnik.getSelectedItem();
        Linija linija = (Linija) cmbLinija.getSelectedItem();
        String valuta = txtValuta.getText().trim();
        String iznosText = txtCenaUkupno.getText().trim();
        double cenaUkupno = 0;
        
        if(!iznosText.isBlank()){
            try {
                cenaUkupno = Double.parseDouble(iznosText);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Cena ne sme biti prazna!", "Greska!", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
        }
        if(cenaUkupno < 0){
            JOptionPane.showMessageDialog(this, "Cena mora biti pozitivna!", "Greska!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        listaKarti = modelKarta.pretrazi(datumKarte, operater, putnik, linija, cenaUkupno);
        if(listaKarti == null){
            listaKarti = new LinkedList<>();
        }
        modelKarta = new ModelTabelePrikazKarta(listaKarti);
        tblKarte.setModel(modelKarta);
        
        if(!listaKarti.isEmpty()){
            JOptionPane.showMessageDialog(this, "Sistem je nasao karte po zadatim kriterijumima", "Uspeh", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje karte po zadatim kriterijumima", "Greska", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnPretraziActionPerformed

    private void btnResetujFiltereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetujFiltereActionPerformed
        osveziTabelu();
    }//GEN-LAST:event_btnResetujFiltereActionPerformed

    private void btnPromeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromeniActionPerformed
        int red = tblKarte.getSelectedRow();
        if(red != -1){
            JOptionPane.showMessageDialog(this, "Sistem je nasao kartu", "Uspeh", JOptionPane.INFORMATION_MESSAGE);
            Karta karta = modelKarta.getKarte().get(red);
            KreirajKartaForma forma = new KreirajKartaForma();
            forma.setKartaListener(this);
            forma.setKarta(karta);
            forma.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje kartu", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnPromeniActionPerformed

    private void tblKarteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKarteMouseClicked
        int red = tblKarte.getSelectedRow();
        if(red != -1){
            Karta karta = modelKarta.getKarte().get(red);
            listaStavki = karta.getStavkeKarte();
            modelStavke = new ModelTabelePrikazStavkiKarte(listaStavki);
            tblStavkeKarte.setModel(modelStavke);
        }
    }//GEN-LAST:event_tblKarteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrikaziKartaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrikaziKartaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrikaziKartaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrikaziKartaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrikaziKartaForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JButton btnPromeni;
    private javax.swing.JButton btnResetujFiltere;
    private javax.swing.JComboBox<Linija> cmbLinija;
    private javax.swing.JComboBox<Operater> cmbOperater;
    private javax.swing.JComboBox<Putnik> cmbPutnik;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblKarte;
    private javax.swing.JTable tblStavkeKarte;
    private javax.swing.JTextField txtCenaUkupno;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtValuta;
    // End of variables declaration//GEN-END:variables

    private void napuniComboBoxeve() {
        operateri = kontrolerKarta.ucitajOperatere();
        putnici = kontrolerPutnik.ucitajSvePutnike();
        linije = kontrolerKarta.ucitajLinije();
        for (Operater operater : operateri) {
            cmbOperater.addItem(operater);
        }
        for (Putnik putnik : putnici) {
            cmbPutnik.addItem(putnik);
        }
        for (Linija linija : linije) {
            cmbLinija.addItem(linija);
        }
    }

    private void initTable() {
        listaKarti = kontrolerKarta.ucitajKarte();
        System.out.println("Broj karata ucitanih iz baze: " + listaKarti.size());
        for (Karta k : listaKarti) {
            System.out.println("Karta ID: " + k.getId() + ", Putnik: " + k.getPutnik());
        }
        modelKarta = new ModelTabelePrikazKarta(listaKarti);
        tblKarte.setModel(modelKarta);
    }

    @Override
    public void kartaIzmenjena() {
        osveziTabelu();
    }
    
    private void osveziTabelu(){
        listaKarti = kontrolerKarta.ucitajKarte();
        modelKarta = new ModelTabelePrikazKarta(listaKarti);
        tblKarte.setModel(modelKarta);
        System.out.println("Broj karata ucitanih iz baze: " + listaKarti.size());
        for (Karta k : listaKarti) {
            System.out.println("Karta ID: " + k.getId() + ", Putnik: " + k.getPutnik());
        }
        modelStavke = new ModelTabelePrikazStavkiKarte(new LinkedList<>());
        tblStavkeKarte.setModel(modelStavke);
        
    }
    
}
